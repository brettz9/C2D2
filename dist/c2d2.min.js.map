{"version":3,"file":"c2d2.min.js","sources":["../src/c2d2.js"],"sourcesContent":["/* eslint-env node */\r\n\r\n/**\r\n* @todo Switch to ES6 modules and build to `dist` with Rollup\r\n* @todo Resume ensuring properties/methods are added and any todos noted for potential to accept specific arguments as wrapped objects or return wrapped items: {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dfnReturnLink-0}\r\n* @todo add with package.json (including Node dependencies) to npm\r\n* @todo Add tests, including for window, Node, AMD\r\n* @todo Add shim plugin dependency once ready\r\n*/\r\n\r\nfunction _forEach (arr, h) {\r\n    for (let i = 0, arrl = arr.length; i < arrl; i++) {\r\n        h(arr[i], i);\r\n    }\r\n}\r\n\r\nfunction _arrayify (begin) {\r\n    let args = arguments;\r\n    if (typeof begin === 'string') {\r\n        args = [];\r\n        const coords = begin.trim().replace(/\\s*,\\s+/g, ', ').split(/\\s+/);\r\n\r\n        _forEach(coords, (item, idx) => {\r\n            args[idx] = item.split(', ');\r\n        });\r\n    }\r\n    return args;\r\n}\r\n\r\n// Adds NodeJS support, and exports interface to modules that require this module\r\nconst w = typeof window === 'undefined' ? global : window; // This should not be needed by Node\r\n\r\nfunction buildMethod (m) {\r\n    return function (...args) {\r\n        this.parent[m](...args);\r\n        return this;\r\n    };\r\n}\r\nfunction buildGetterMethod (gm, methodFromProperty, WrapperClass) {\r\n    return function (imageData) {\r\n        const args = [].slice.call(arguments);\r\n        if (gm === 'putImageData' && typeof imageData === 'object' && imageData.imageData) { // Todo: Hackish check for taking regular ImageData object\r\n            args[0] = imageData.imageData;\r\n        }\r\n        if (methodFromProperty) {\r\n            return new WrapperClass(this.parent[gm]);\r\n        }\r\n        return new WrapperClass(this.parent[gm](...args));\r\n    };\r\n}\r\nfunction buildLiteralGetterMethod (gm) {\r\n    return function (...args) {\r\n        return this.parent[gm](...args);\r\n    };\r\n}\r\nfunction buildPropertyMethod (p) {\r\n    return function (value) {\r\n        if (value === undefined) {\r\n            return this.parent[p];\r\n        }\r\n        this.parent[p] = value;\r\n        return this;\r\n    };\r\n}\r\nfunction buildContextMethods (method) {\r\n    return function (...args) {\r\n        method.apply(this, args);\r\n        return this;\r\n    };\r\n}\r\n// Todo: Wrap up any specific methods or properties which might be used on the opaque pattern and\r\n//     gradient child objects, if ever exposed, so that these can be properly wrapped and made chainable.\r\nconst DelegateChain = {\r\n    addMethods (methods, clss) {\r\n        for (let i = 0, methl = methods.length; i < methl; i++) {\r\n            const m = methods[i];\r\n            clss.prototype[m] = buildMethod(m);\r\n        }\r\n    },\r\n    addGetterMethods (getterMethods, clss, WrapperClass, methodFromProperty) {\r\n        for (let i = 0, gmethl = getterMethods.length; i < gmethl; i++) {\r\n            const gm = getterMethods[i];\r\n            if (WrapperClass) {\r\n                clss.prototype[gm] = buildGetterMethod(gm, methodFromProperty, WrapperClass);\r\n            } else { // For those which return a literal\r\n                clss.prototype[gm] = buildLiteralGetterMethod(gm);\r\n            }\r\n        }\r\n    },\r\n    addPropertyMethods (props, clss) {\r\n        for (let i = 0, propl = props.length; i < propl; i++) {\r\n            const p = props[i];\r\n            clss.prototype[p] = buildPropertyMethod(p);\r\n        }\r\n    }\r\n};\r\n\r\nfunction _C2D2CanvasPixelArraySetup () {\r\n    const props = ['length']; // We'll just use this commonly used accessor name\r\n    C2D2CanvasPixelArray.prototype.item = function (value, value2) {\r\n        if (value2 === undefined) {\r\n            return this.parent[value];\r\n        }\r\n        this.parent[value] = value2;\r\n        return this;\r\n    };\r\n    //  even though not part of standard interface (not specified)\r\n    DelegateChain.addPropertyMethods(props, C2D2CanvasPixelArray);\r\n}\r\n\r\nfunction C2D2CanvasPixelArray (canvasPixelArrayObj) {\r\n    if (!C2D2CanvasPixelArray.prototype.length) {\r\n        _C2D2CanvasPixelArraySetup();\r\n    }\r\n    this.parent = this.array = this.pixelArray = canvasPixelArrayObj;\r\n};\r\n\r\nfunction _C2D2ImageDataSetup () {\r\n    const props = [\r\n            'width', 'height', 'resolution' // Todo: The latter is read-only\r\n        ],\r\n        getterMethods = ['data'];\r\n    DelegateChain.addGetterMethods(getterMethods, C2D2ImageData, C2D2CanvasPixelArray, true);\r\n    DelegateChain.addPropertyMethods(props, C2D2ImageData);\r\n}\r\n\r\nfunction C2D2ImageData (imageDataObj) {\r\n    if (!C2D2ImageData.prototype.width) {\r\n        _C2D2ImageDataSetup();\r\n    }\r\n    this.parent = this.imageData = imageDataObj;\r\n};\r\n\r\nfunction _C2D2GradientSetup () {\r\n    const methods = ['addColorStop'];\r\n    DelegateChain.addMethods(methods, C2D2Gradient);\r\n}\r\n\r\n// Partly opaque\r\nfunction C2D2Gradient (gradientObj) {\r\n    if (!C2D2Gradient.prototype.addColorStop) {\r\n        _C2D2GradientSetup();\r\n    }\r\n    this.parent = this.gradient = gradientObj;\r\n}\r\n\r\n// function _C2D2PatternSetup () {\r\n//      Fully opaque\r\n// }\r\n\r\n// Fully opaque\r\n// If never any benefits to wrapping (with chainable new methods), just avoid making this child class\r\nfunction C2D2Pattern (patternObj) {\r\n    // if (!C2D2Pattern.prototype.width) { // no known properties/methods\r\n    //    _C2D2PatternSetup();\r\n    // }\r\n    this.parent = this.pattern = patternObj;\r\n    return patternObj; // Just return the object for now, as appears there will be no need to wrap\r\n}\r\n\r\nfunction _C2D2ContextSetup () {\r\n    // Predefined methods\r\n    const methods = [\r\n        'addHitRegion', 'arc', 'arcTo', 'beginPath', 'bezierCurveTo', 'clearRect',\r\n        'clip', 'closePath', 'commit', 'drawImage', 'drawSystemFocusRing', 'ellipse', 'fill', 'fillRect', 'fillText', 'getLineDash',\r\n        'lineTo', 'moveTo', 'quadraticCurveTo', 'rect', 'removeHitRegion', 'resetClip', 'resetTransform',\r\n        'restore', 'rotate', 'save', 'scale', 'scrollPathIntoView', 'setLineDash', 'setTransform',\r\n        'stroke', 'strokeRect', 'strokeText', 'transform', 'translate'\r\n    ]; // drawFocusRing not currently supported\r\n    // Todo: Implement these to be wrapped so can get and set data in their own child chains\r\n    // Todo: createPattern is a wholly opaque object, so might need to have child wrappers\r\n    //    if implementing any known methods in the future\r\n    const imageDataGetterMethods = ['createImageData', 'createImageDataHD', 'getImageData', 'getImageDataHD', 'putImageData', 'putImageDataHD'],\r\n        gradientGetterMethods = ['createLinearGradient', 'createRadialGradient'],\r\n        patternGetterMethods = ['createPattern'], // Todo: createPattern to accept wrapped canvas element or context?\r\n        // Do not return 'this' object since purpose is to get (and the objects they create don't have more than\r\n        // one method to make it desirable to chain, except for ImageData ones, moved to childGetterMethods\r\n        getterMethods = ['drawCustomFocusRing', 'isPointInPath', 'isPointInStroke', 'measureText']; // wrap TextMetrics of measureText?\r\n        // Predefined properties\r\n    const props = ['canvas', 'currentTransform', 'direction', 'fillStyle', 'font', 'globalAlpha',\r\n        'globalCompositeOperation', 'imageSmoothingEnabled',\r\n        'lineCap', 'lineDashOffset', 'lineJoin', 'lineWidth', 'miterLimit',\r\n        'shadowOffsetX', 'shadowOffsetY', 'shadowBlur', 'shadowColor',\r\n        'strokeStyle', 'textAlign', 'textBaseline']; // Todo: fillStyle and strokeStyle to return or be settable with wrapped CanvasGradient or CanvasPattern, currentTransform with wrapped SVGMatrix?\r\n\r\n    DelegateChain.addMethods(methods, C2D2Context);\r\n\r\n    DelegateChain.addGetterMethods(imageDataGetterMethods, C2D2Context, C2D2ImageData);\r\n    DelegateChain.addGetterMethods(gradientGetterMethods, C2D2Context, C2D2Gradient);\r\n    DelegateChain.addGetterMethods(patternGetterMethods, C2D2Context, C2D2Pattern);\r\n\r\n    DelegateChain.addGetterMethods(getterMethods, C2D2Context);\r\n\r\n    DelegateChain.addPropertyMethods(props, C2D2Context);\r\n}\r\n\r\nfunction c2d2Element (arr, opts) {\r\n    let el = opts;\r\n    const d = w.document || null;\r\n    const noArray = typeof arr !== 'object' || !arr.length;\r\n\r\n    if (noArray) {\r\n        el = opts = arr;\r\n        arr = [];\r\n    } else {\r\n        opts = opts || {};\r\n    }\r\n    const bNodeModule = opts && (opts.path || opts.fileStream);\r\n\r\n    let parent;\r\n    // Todo: deal with string w/h coords, number w/h coords\r\n    if (typeof opts === 'string') {\r\n        el = d.getElementById(opts);\r\n    } else if (typeof opts === 'object' && bNodeModule) {\r\n        const Canvas = require('canvas');\r\n        el = new Canvas();\r\n        const width = arr[0] || opts.width || opts.w;\r\n        const height = arr[1] || opts.height || opts.h;\r\n        if (width) {\r\n            el.width = width;\r\n        }\r\n        if (height) {\r\n            el.height = height;\r\n        }\r\n        const path = opts.fileStream || opts.path;\r\n        if (path) {\r\n            const fs = require('fs');\r\n            const out = fs.createWriteStream(path);\r\n            const stream = el.createPNGStream();\r\n            stream.on('data', (chunk) => {\r\n                out.write(chunk);\r\n            });\r\n            stream.on('end', () => {\r\n                out.end();\r\n            });\r\n        }\r\n    } else if (typeof opts === 'object' && !opts.nodeName) {\r\n        el = (d.createElementNS && d.documentElement.namespaceURI !== null)\r\n            ? d.createElementNS('http://www.w3.org/1999/xhtml', 'canvas')\r\n            : d.createElement('canvas');\r\n        if (opts.width || opts.w) {\r\n            el.setAttribute('width', opts.width || opts.w);\r\n        }\r\n        if (opts.height || opts.h) {\r\n            el.setAttribute('height', opts.height || opts.h);\r\n        }\r\n        if (opts.id) {\r\n            el.setAttribute('id', opts.id);\r\n        }\r\n        if (opts.style) { // Better to use a class instead\r\n            el.setAttribute('style', opts.style);\r\n        }\r\n        if (opts.innerHTML) { // For fallback display\r\n            el.innerHTML = opts.innerHTML;\r\n        }\r\n        if (opts['class'] || opts.className) {\r\n            el.setAttribute('class', opts['class'] || opts.className);\r\n        }\r\n        parent = opts.appendTo\r\n            ? typeof opts.appendTo === 'string'\r\n                ? d.getElementById(opts.appendTo)\r\n                : opts.appendTo\r\n            : d.body;\r\n    } else if (opts === undefined) {\r\n        el = d.getElementsByTagName('canvas')[0];\r\n    }\r\n\r\n    if (!noArray && el.setAttribute) {\r\n        el.setAttribute('width', arr[0]);\r\n        el.setAttribute('height', arr[1]);\r\n    }\r\n    if (parent) {\r\n        parent.appendChild(el);\r\n    }\r\n\r\n    if (w.G_vmlCanvasManager) { // If using ExplorerCanvas to get IE support: http://code.google.com/p/explorercanvas/\r\n        el = w.G_vmlCanvasManager.initElement(el);\r\n    }\r\n    return el;\r\n};\r\n\r\n/**\r\n* Wraps CanvasRenderingContext2D\r\n* @todo Could make generic CanvasContext to accept \"type\" as a property when not '2d'\r\n*/\r\nfunction C2D2Context (arr, opts) {\r\n    if (!(this instanceof C2D2Context)) {\r\n        return new C2D2Context(arr, opts);\r\n    }\r\n\r\n    const el = this.canvas = c2d2Element(arr, opts);\r\n\r\n    this.context = this.parent = el.getContext('2d');\r\n    if (!C2D2Context.prototype.arc) {\r\n        _C2D2ContextSetup();\r\n    }\r\n    // Expose the c2d2Element properties (todo: could use Object.defineProperty to ensure stayed in sync)\r\n    this.width = el.width;\r\n    this.height = el.height;\r\n    return this; // Satisfy Netbeans\r\n};\r\n// Expose the c2d2Element methods\r\n_forEach(['transferControlToProxy', // Todo: Wrap this method's CanvasProxy return result?\r\n    'getContext', 'probablySupportsContext', 'supportsContext', 'setContext',\r\n    'toDataURL', 'toDataURLHD', 'toBlob', 'toBlobHD'], function (method) {\r\n    C2D2Context.prototype[method] = function (...args) {\r\n        return this.canvas[method](...args);\r\n    };\r\n});\r\n\r\nC2D2Context.addMethods = function (methodMap) {\r\n    Object.entries(methodMap).forEach(([methodName, method]) => {\r\n        C2D2Context.prototype[methodName] = buildContextMethods(method);\r\n    });\r\n};\r\n\r\n// Unlike addMethods, requires manually supplying 'this' at the end\r\nC2D2Context.extend = function (obj) { // Keeps constructor property in tact\r\n    Object.entries(obj).forEach(([propertyName, propertyValue]) => {\r\n        C2D2Context.prototype[propertyName] = propertyValue;\r\n    });\r\n};\r\n\r\n// EXTENSIONS\r\nC2D2Context.addMethods({\r\n    $line (obj, close) {\r\n        let a;\r\n        if (obj && typeof obj === 'object' && !obj.length) {\r\n            if (obj.color) {\r\n                this.$lineColor(obj.color);\r\n            }\r\n            if (obj.width || obj.w) {\r\n                this.lineWidth(obj.width || obj.w);\r\n            }\r\n            if (obj.shadow || obj.$shadow) {\r\n                this.$shadow(obj.shadow);\r\n            }\r\n            a = _arrayify.apply(null, (obj.coords || obj.xy || obj.path));\r\n        } else {\r\n            a = _arrayify.apply(null, arguments);\r\n        }\r\n        this.beginPath().moveTo.apply(this, a[0]);\r\n        for (let i = 1, argl = a.length; i < argl; i++) {\r\n            this.lineTo(...a[i]);\r\n        }\r\n        if (close || obj.close) {\r\n            this.closePath();\r\n        }\r\n        this.stroke();\r\n    },\r\n    $fill (obj) {\r\n        let a;\r\n        if (obj && typeof obj === 'object' && !obj.length) {\r\n            if (obj.color) {\r\n                this.$fillColor(obj.color);\r\n            }\r\n            if (obj.shadow || obj.$shadow) {\r\n                this.$shadow(obj.shadow);\r\n            }\r\n            a = _arrayify.apply(null, (obj.coords || obj.xy || obj.path));\r\n        } else {\r\n            a = _arrayify.apply(null, arguments);\r\n        }\r\n        if (a[0].length === 4) {\r\n            return this.$fillRect(...a);\r\n        }\r\n        this.beginPath().moveTo.apply(this, a[0]);\r\n        for (let i = 1, argl = a.length; i < argl; i++) {\r\n            this.lineTo(...a[i]);\r\n        }\r\n        this.fill();\r\n    },\r\n    $clear (...args) {\r\n        this.$clearRect(...args);\r\n    },\r\n    $fillRect (x, y, w, h) {\r\n        if (x && typeof x === 'object' && x.length) {\r\n            for (let i = 0, argl = arguments.length; i < argl; i++) {\r\n                this.$fillRect(...arguments[i]); // Allow array for coordinates\r\n            }\r\n            return this;\r\n        }\r\n        this.fillRect(x || 0, y || 0, w || this.width, h || this.height);\r\n    },\r\n    $clearRect (x, y, w, h) {\r\n        if (x && typeof x === 'object' && x.length) {\r\n            for (let i = 0, argl = arguments.length; i < argl; i++) {\r\n                this.$clearRect(...arguments[i]); // Allow array for coordinates\r\n            }\r\n            return this;\r\n        }\r\n        this.clearRect(x || 0, y || 0, w || this.width, h || this.height);\r\n    },\r\n\r\n    // $rect, $clip, $arcTo\r\n\r\n    $strokeRect (x, y, w, h) {\r\n        if (x && typeof x === 'object' && x.length) {\r\n            for (let i = 0, argl = arguments.length; i < argl; i++) {\r\n                this.$strokeRect(...arguments[i]); // Allow array for coordinates\r\n            }\r\n            return this;\r\n        }\r\n        this.strokeRect(x || 0, y || 0, w || this.width, h || this.height);\r\n    },\r\n    $arc (x, y, radius, startAngle, endAngle, anticlockwise) {\r\n        if (x && typeof x === 'object' && x.length) {\r\n            for (let i = 0, argl = arguments.length; i < argl; i++) {\r\n                this.$arc(...arguments[i]); // Allow array for coordinates\r\n            }\r\n            return this;\r\n        }\r\n        this.arc(x, y, radius, startAngle, endAngle, anticlockwise);\r\n    },\r\n    $quadraticCurve (...args) {\r\n        this.$quadratic(...args);\r\n    },\r\n    $quadraticCurveTo (...args) {\r\n        this.$quadratic(...args);\r\n    },\r\n    $quadratic (cp1x, cp1y, x, y) {\r\n        if (cp1x && typeof cp1x === 'object' && cp1x.length) {\r\n            for (let i = 0, argl = arguments.length; i < argl; i++) {\r\n                this.$quadratic(...arguments[i]); // Allow array for coordinates\r\n            }\r\n            return this;\r\n        }\r\n        this.quadraticCurveTo(cp1x, cp1y, x, y);\r\n    },\r\n    $bezierCurve (...args) {\r\n        this.$bezier(...args);\r\n    },\r\n    $bezierCurveTo (...args) {\r\n        this.$bezier(...args);\r\n    },\r\n    $bezier (cp1x, cp1y, cp2x, cp2y, x, y) {\r\n        if (cp1x && typeof cp1x === 'object' && cp1x.length) {\r\n            for (let i = 0, argl = arguments.length; i < argl; i++) {\r\n                this.$bezier(...arguments[i]); // Allow array for coordinates\r\n            }\r\n            return this;\r\n        }\r\n        this.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\r\n    }\r\n});\r\nC2D2Context.extend({ // Don't auto-return 'this' object for these\r\n    $shadowColor (value) {\r\n        if (value === 'random') {\r\n            value = C2D2Context.randomColor();\r\n        }\r\n        return this.shadowColor(value);\r\n    },\r\n    $fillColor (value) { // getter or setter\r\n        if (value === 'random') {\r\n            value = C2D2Context.randomColor();\r\n        }\r\n        return this.fillStyle(value);\r\n    },\r\n    $lineColor (value) { // getter or setter\r\n        if (value === 'random') {\r\n            value = C2D2Context.randomColor();\r\n        }\r\n        return this.strokeStyle(value);\r\n    },\r\n    $imageData (...args) {\r\n        if (typeof args[0] === 'object' && args[1] !== undefined) {\r\n            this.putImageData(...args);\r\n            return this;\r\n        }\r\n        if (args[2] !== undefined) {\r\n            return this.getImageData(...args); // data (length), width, height\r\n        }\r\n        return this.createImageData(...args);\r\n    },\r\n    $shadowOffset (x, y) {\r\n        if (x === undefined) {\r\n            return [this.shadowOffsetX(), this.shadowOffsetY()];\r\n        }\r\n\r\n        if (typeof x === 'object' && !y && x.length) {\r\n            y = x[1];\r\n            x = x[0];\r\n        } else if (typeof x === 'string' && x.indexOf(', ') !== -1) {\r\n            ([x, y] = x.split(/\\s*,\\s*/));\r\n        }\r\n        this.shadowOffsetX(x).shadowOffsetY(y);\r\n        return this;\r\n    },\r\n    $shadowBlur (...args) { // Just a place-holder, at least for now\r\n        this.shadowBlur(...args);\r\n    },\r\n    $shadowOffsetY (...args) { // Just a place-holder, at least for now\r\n        this.shadowOffsetY(...args);\r\n    },\r\n    $shadowOffsetX (...args) { // Just a place-holder, at least for now\r\n        this.shadowOffsetX(...args);\r\n    },\r\n    $shadow (sh) {\r\n        if (sh === undefined) { // Not super useful compared to native\r\n            return {offset: this.$shadowOffset(), blur: this.shadowBlur(), color: this.$shadowColor(),\r\n                offsetX: this.shadowOffsetX(), offsetY: this.shadowOffsetY()};\r\n        }\r\n        Object.entries(sh).forEach(([att, shadowOffset]) => {\r\n            if (att === 'offset') { // Offer additional property to get the coords together\r\n                this.$shadowOffset(shadowOffset);\r\n            } else {\r\n                this[`$shadow${att.charAt(0).toUpperCase() + att.slice(1)}`](shadowOffset);\r\n            }\r\n        });\r\n        return this;\r\n    }\r\n});\r\n\r\nC2D2Context.randomNumber = function (min, max) {\r\n    min = min || 0;\r\n    max = max || 1;\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n};\r\n\r\n// See also the individual methods which use this (allowing \"random\" as a \"color\" argument)\r\nC2D2Context.randomColor = function (r, g, b, rmax, gmax, bmax) {\r\n    r = r || 0;\r\n    g = g || 0;\r\n    b = b || 0;\r\n    rmax = rmax || 255;\r\n    gmax = gmax || 255;\r\n    bmax = bmax || 255;\r\n    const red = C2D2Context.randomNumber(r, rmax),\r\n        green = C2D2Context.randomNumber(g, gmax),\r\n        blue = C2D2Context.randomNumber(b, bmax);\r\n    return `rgb${red}, ${green}, ${blue})`;\r\n};\r\n/**\r\nUseful for separation of concerns, detecting the CSS style rule for a given class, id, or other selector and applying it as an argument to a canvas method, so that the JavaScript does not need to be concerned with secondary styling (of course the images it generates is a kind of style)\r\n*/\r\nC2D2Context.getCSSPropertyValue = function (selectorText, propertyName, sheet) {\r\n    function _getPropertyFromStyleSheet (ss, selectorText, propertyName) {\r\n        const rules = ss.cssRules || ss.rules; // Mozilla or IE\r\n        for (let j = 0, crl = rules.length; j < crl; j++) {\r\n            const rule = rules[j];\r\n            try {\r\n                if (rule.type === 1 && // CSSRule.STYLE_RULE\r\n                    rule.selectorText === selectorText) {\r\n                    return rule.style.getPropertyValue(propertyName);\r\n                }\r\n            } catch (err) { // IE\r\n                if (rule.selectorText === selectorText) {\r\n                    propertyName = propertyName.replace(/-([a-z])/g, String.prototype.toUpperCase);\r\n                    return rule.style[propertyName];\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    let ss, val;\r\n    if (sheet !== undefined) {\r\n        ss = document.styleSheets[sheet];\r\n        return _getPropertyFromStyleSheet(ss, selectorText, propertyName);\r\n    }\r\n    for (let i = 0, dsl = document.styleSheets.length; i < dsl; i++) {\r\n        ss = document.styleSheets[i];\r\n        val = _getPropertyFromStyleSheet(ss, selectorText, propertyName);\r\n        if (val) {\r\n            break;\r\n        }\r\n    }\r\n    return val;\r\n};\r\n\r\n// Attach classes for sake of extensibility (or utilization for canvasElement)\r\nC2D2Context.CanvasPixelArray = C2D2CanvasPixelArray;\r\nC2D2Context.ImageData = C2D2ImageData;\r\nC2D2Context.Gradient = C2D2Gradient;\r\nC2D2Context.Pattern = C2D2Pattern;\r\nC2D2Context.canvasElement = c2d2Element;\r\n\r\nexport default C2D2Context;\r\n"],"names":["_forEach","arr","h","i","arrl","length","_arrayify","begin","args","arguments","trim","replace","split","item","idx","w","window","global","buildMethod","m","parent","this","buildGetterMethod","gm","methodFromProperty","WrapperClass","imageData","slice","call","_typeof","buildLiteralGetterMethod","buildPropertyMethod","p","value","undefined","DelegateChain","addMethods","methods","clss","methl","prototype","addGetterMethods","getterMethods","gmethl","addPropertyMethods","props","propl","C2D2CanvasPixelArray","canvasPixelArrayObj","value2","array","pixelArray","C2D2ImageData","imageDataObj","width","C2D2Gradient","gradientObj","addColorStop","gradient","C2D2Pattern","patternObj","pattern","c2d2Element","opts","el","d","document","noArray","bNodeModule","path","fileStream","getElementById","require","height","out","createWriteStream","stream","createPNGStream","on","chunk","write","end","nodeName","getElementsByTagName","createElementNS","documentElement","namespaceURI","createElement","setAttribute","id","style","innerHTML","className","appendTo","body","appendChild","G_vmlCanvasManager","initElement","C2D2Context","canvas","context","getContext","arc","method","methodMap","Object","entries","forEach","methodName","apply","buildContextMethods","extend","obj","propertyName","propertyValue","$line","close","a","color","$lineColor","lineWidth","shadow","$shadow","coords","xy","beginPath","moveTo","argl","lineTo","closePath","stroke","$fill","$fillColor","$fillRect","fill","$clear","$clearRect","x","y","fillRect","clearRect","$strokeRect","strokeRect","$arc","radius","startAngle","endAngle","anticlockwise","$quadraticCurve","$quadratic","$quadraticCurveTo","cp1x","cp1y","quadraticCurveTo","$bezierCurve","$bezier","$bezierCurveTo","cp2x","cp2y","bezierCurveTo","$shadowColor","randomColor","shadowColor","fillStyle","strokeStyle","$imageData","putImageData","getImageData","createImageData","$shadowOffset","shadowOffsetX","shadowOffsetY","indexOf","$shadowBlur","shadowBlur","$shadowOffsetY","$shadowOffsetX","sh","offset","blur","offsetX","offsetY","att","shadowOffset","_this","charAt","toUpperCase","randomNumber","min","max","Math","floor","random","r","g","b","rmax","gmax","bmax","red","green","blue","getCSSPropertyValue","selectorText","sheet","_getPropertyFromStyleSheet","ss","rules","cssRules","j","crl","rule","type","getPropertyValue","err","String","val","styleSheets","dsl","CanvasPixelArray","ImageData","Gradient","Pattern","canvasElement"],"mappings":"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"}