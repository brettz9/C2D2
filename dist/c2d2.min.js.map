{"version":3,"file":"c2d2.min.js","sources":["../src/c2d2.js"],"sourcesContent":["/* eslint-env node */\r\n\r\n/**\r\n* @todo Switch to ES6 modules and build to `dist` with Rollup\r\n* @todo Resume ensuring properties/methods are added and any todos noted for potential to accept specific arguments as wrapped objects or return wrapped items: {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dfnReturnLink-0}\r\n* @todo add with package.json (including Node dependencies) to npm\r\n* @todo Add tests, including for window, Node, AMD\r\n* @todo Add shim plugin dependency once ready\r\n*/\r\n\r\nfunction _forEach (arr, h) {\r\n    for (let i = 0, arrl = arr.length; i < arrl; i++) {\r\n        h(arr[i], i);\r\n    }\r\n}\r\n\r\nfunction _arrayify (begin) {\r\n    let coords,\r\n        args = arguments;\r\n    if (typeof begin === 'string') {\r\n        args = [];\r\n        coords = begin.trim().replace(/\\s*,\\s+/g, ', ').split(/\\s+/);\r\n\r\n        _forEach(coords, (item, idx) => {\r\n            args[idx] = item.split(', ');\r\n        });\r\n    }\r\n    return args;\r\n}\r\n\r\n// Adds NodeJS support, and exports interface to modules that require this module\r\nconst w = typeof window === 'undefined' ? global : window; // This should not be needed by Node\r\n\r\nfunction buildMethod (m) {\r\n    return function () {\r\n        this.parent[m].apply(this.parent, arguments);\r\n        return this;\r\n    };\r\n}\r\nfunction buildGetterMethod (gm, methodFromProperty, WrapperClass) {\r\n    return function (imageData) {\r\n        const args = [].slice.call(arguments);\r\n        if (gm === 'putImageData' && typeof imageData === 'object' && imageData.imageData) { // Todo: Hackish check for taking regular ImageData object\r\n            args[0] = imageData.imageData;\r\n        }\r\n        if (methodFromProperty) {\r\n            return new WrapperClass(this.parent[gm]);\r\n        }\r\n        return new WrapperClass(this.parent[gm].apply(this.parent, args));\r\n    };\r\n}\r\nfunction buildLiteralGetterMethod (gm) {\r\n    return function () {\r\n        return this.parent[gm].apply(this.parent, arguments);\r\n    };\r\n}\r\nfunction buildPropertyMethod (p) {\r\n    return function (value) {\r\n        if (value === undefined) {\r\n            return this.parent[p];\r\n        }\r\n        this.parent[p] = value;\r\n        return this;\r\n    };\r\n}\r\nfunction buildContextMethods (method) {\r\n    return function () {\r\n        method.apply(this, arguments);\r\n        return this;\r\n    };\r\n}\r\n// Todo: Wrap up any specific methods or properties which might be used on the opaque pattern and\r\n//     gradient child objects, if ever exposed, so that these can be properly wrapped and made chainable.\r\nconst DelegateChain = {\r\n    addMethods (methods, clss) {\r\n        for (let i = 0, methl = methods.length; i < methl; i++) {\r\n            const m = methods[i];\r\n            clss.prototype[m] = buildMethod(m);\r\n        }\r\n    },\r\n    addGetterMethods (getterMethods, clss, WrapperClass, methodFromProperty) {\r\n        for (let i = 0, gmethl = getterMethods.length; i < gmethl; i++) {\r\n            const gm = getterMethods[i];\r\n            if (WrapperClass) {\r\n                clss.prototype[gm] = buildGetterMethod(gm, methodFromProperty, WrapperClass);\r\n            } else { // For those which return a literal\r\n                clss.prototype[gm] = buildLiteralGetterMethod(gm);\r\n            }\r\n        }\r\n    },\r\n    addPropertyMethods (props, clss) {\r\n        for (let i = 0, propl = props.length; i < propl; i++) {\r\n            const p = props[i];\r\n            clss.prototype[p] = buildPropertyMethod(p);\r\n        }\r\n    }\r\n};\r\n\r\nfunction _C2D2CanvasPixelArraySetup () {\r\n    const props = ['length']; // We'll just use this commonly used accessor name\r\n    C2D2CanvasPixelArray.prototype.item = function (value, value2) {\r\n        if (value2 === undefined) {\r\n            return this.parent[value];\r\n        }\r\n        this.parent[value] = value2;\r\n        return this;\r\n    };\r\n    //  even though not part of standard interface (not specified)\r\n    DelegateChain.addPropertyMethods(props, C2D2CanvasPixelArray);\r\n}\r\n\r\nfunction C2D2CanvasPixelArray (canvasPixelArrayObj) {\r\n    if (!C2D2CanvasPixelArray.prototype.length) {\r\n        _C2D2CanvasPixelArraySetup();\r\n    }\r\n    this.parent = this.array = this.pixelArray = canvasPixelArrayObj;\r\n};\r\n\r\nfunction _C2D2ImageDataSetup () {\r\n    const props = [\r\n            'width', 'height', 'resolution' // Todo: The latter is read-only\r\n        ],\r\n        getterMethods = ['data'];\r\n    DelegateChain.addGetterMethods(getterMethods, C2D2ImageData, C2D2CanvasPixelArray, true);\r\n    DelegateChain.addPropertyMethods(props, C2D2ImageData);\r\n}\r\n\r\nfunction C2D2ImageData (imageDataObj) {\r\n    if (!C2D2ImageData.prototype.width) {\r\n        _C2D2ImageDataSetup();\r\n    }\r\n    this.parent = this.imageData = imageDataObj;\r\n};\r\n\r\nfunction _C2D2GradientSetup () {\r\n    const methods = ['addColorStop'];\r\n    DelegateChain.addMethods(methods, C2D2Gradient);\r\n}\r\n\r\n// Partly opaque\r\nfunction C2D2Gradient (gradientObj) {\r\n    if (!C2D2Gradient.prototype.addColorStop) {\r\n        _C2D2GradientSetup();\r\n    }\r\n    this.parent = this.gradient = gradientObj;\r\n}\r\n\r\n// function _C2D2PatternSetup () {\r\n//      Fully opaque\r\n// }\r\n\r\n// Fully opaque\r\n// If never any benefits to wrapping (with chainable new methods), just avoid making this child class\r\nfunction C2D2Pattern (patternObj) {\r\n    // if (!C2D2Pattern.prototype.width) { // no known properties/methods\r\n    //    _C2D2PatternSetup();\r\n    // }\r\n    this.parent = this.pattern = patternObj;\r\n    return patternObj; // Just return the object for now, as appears there will be no need to wrap\r\n}\r\n\r\nfunction _C2D2ContextSetup () {\r\n    // Predefined methods\r\n    const methods = [\r\n        'addHitRegion', 'arc', 'arcTo', 'beginPath', 'bezierCurveTo', 'clearRect',\r\n        'clip', 'closePath', 'commit', 'drawImage', 'drawSystemFocusRing', 'ellipse', 'fill', 'fillRect', 'fillText', 'getLineDash',\r\n        'lineTo', 'moveTo', 'quadraticCurveTo', 'rect', 'removeHitRegion', 'resetClip', 'resetTransform',\r\n        'restore', 'rotate', 'save', 'scale', 'scrollPathIntoView', 'setLineDash', 'setTransform',\r\n        'stroke', 'strokeRect', 'strokeText', 'transform', 'translate'\r\n    ]; // drawFocusRing not currently supported\r\n    // Todo: Implement these to be wrapped so can get and set data in their own child chains\r\n    // Todo: createPattern is a wholly opaque object, so might need to have child wrappers\r\n    //    if implementing any known methods in the future\r\n    const imageDataGetterMethods = ['createImageData', 'createImageDataHD', 'getImageData', 'getImageDataHD', 'putImageData', 'putImageDataHD'],\r\n        gradientGetterMethods = ['createLinearGradient', 'createRadialGradient'],\r\n        patternGetterMethods = ['createPattern'], // Todo: createPattern to accept wrapped canvas element or context?\r\n        // Do not return 'this' object since purpose is to get (and the objects they create don't have more than\r\n        // one method to make it desirable to chain, except for ImageData ones, moved to childGetterMethods\r\n        getterMethods = ['drawCustomFocusRing', 'isPointInPath', 'isPointInStroke', 'measureText']; // wrap TextMetrics of measureText?\r\n        // Predefined properties\r\n    const props = ['canvas', 'currentTransform', 'direction', 'fillStyle', 'font', 'globalAlpha',\r\n        'globalCompositeOperation', 'imageSmoothingEnabled',\r\n        'lineCap', 'lineDashOffset', 'lineJoin', 'lineWidth', 'miterLimit',\r\n        'shadowOffsetX', 'shadowOffsetY', 'shadowBlur', 'shadowColor',\r\n        'strokeStyle', 'textAlign', 'textBaseline']; // Todo: fillStyle and strokeStyle to return or be settable with wrapped CanvasGradient or CanvasPattern, currentTransform with wrapped SVGMatrix?\r\n\r\n    DelegateChain.addMethods(methods, C2D2Context);\r\n\r\n    DelegateChain.addGetterMethods(imageDataGetterMethods, C2D2Context, C2D2ImageData);\r\n    DelegateChain.addGetterMethods(gradientGetterMethods, C2D2Context, C2D2Gradient);\r\n    DelegateChain.addGetterMethods(patternGetterMethods, C2D2Context, C2D2Pattern);\r\n\r\n    DelegateChain.addGetterMethods(getterMethods, C2D2Context);\r\n\r\n    DelegateChain.addPropertyMethods(props, C2D2Context);\r\n}\r\n\r\nfunction c2d2Element (arr, opts) {\r\n    let parent, Canvas, fs, out, stream, path, width, height,\r\n        el = opts;\r\n    const d = w.document || null;\r\n    const noArray = typeof arr !== 'object' || !arr.length;\r\n\r\n    if (noArray) {\r\n        el = opts = arr;\r\n        arr = [];\r\n    } else {\r\n        opts = opts || {};\r\n    }\r\n    const bNodeModule = opts && (opts.path || opts.fileStream);\r\n\r\n    // Todo: deal with string w/h coords, number w/h coords\r\n    if (typeof opts === 'string') {\r\n        el = d.getElementById(opts);\r\n    } else if (typeof opts === 'object' && bNodeModule) {\r\n        Canvas = require('canvas');\r\n        el = new Canvas();\r\n        width = arr[0] || opts.width || opts.w;\r\n        height = arr[1] || opts.height || opts.h;\r\n        if (width) {\r\n            el.width = width;\r\n        }\r\n        if (height) {\r\n            el.height = height;\r\n        }\r\n        path = opts.fileStream || opts.path;\r\n        if (path) {\r\n            fs = require('fs');\r\n            out = fs.createWriteStream(path);\r\n            stream = el.createPNGStream();\r\n            stream.on('data', (chunk) => {\r\n                out.write(chunk);\r\n            });\r\n            stream.on('end', () => {\r\n                out.end();\r\n            });\r\n        }\r\n    } else if (typeof opts === 'object' && !opts.nodeName) {\r\n        el = (d.createElementNS && d.documentElement.namespaceURI !== null)\r\n            ? d.createElementNS('http://www.w3.org/1999/xhtml', 'canvas')\r\n            : d.createElement('canvas');\r\n        if (opts.width || opts.w) {\r\n            el.setAttribute('width', opts.width || opts.w);\r\n        }\r\n        if (opts.height || opts.h) {\r\n            el.setAttribute('height', opts.height || opts.h);\r\n        }\r\n        if (opts.id) {\r\n            el.setAttribute('id', opts.id);\r\n        }\r\n        if (opts.style) { // Better to use a class instead\r\n            el.setAttribute('style', opts.style);\r\n        }\r\n        if (opts.innerHTML) { // For fallback display\r\n            el.innerHTML = opts.innerHTML;\r\n        }\r\n        if (opts['class'] || opts.className) {\r\n            el.setAttribute('class', opts['class'] || opts.className);\r\n        }\r\n        parent = opts.appendTo\r\n            ? typeof opts.appendTo === 'string'\r\n                ? d.getElementById(opts.appendTo)\r\n                : opts.appendTo\r\n            : d.body;\r\n    } else if (opts === undefined) {\r\n        el = d.getElementsByTagName('canvas')[0];\r\n    }\r\n\r\n    if (!noArray && el.setAttribute) {\r\n        el.setAttribute('width', arr[0]);\r\n        el.setAttribute('height', arr[1]);\r\n    }\r\n    if (parent) {\r\n        parent.appendChild(el);\r\n    }\r\n\r\n    if (w.G_vmlCanvasManager) { // If using ExplorerCanvas to get IE support: http://code.google.com/p/explorercanvas/\r\n        el = w.G_vmlCanvasManager.initElement(el);\r\n    }\r\n    return el;\r\n};\r\n\r\n/**\r\n* Wraps CanvasRenderingContext2D\r\n* @todo Could make generic CanvasContext to accept \"type\" as a property when not '2d'\r\n*/\r\nfunction C2D2Context (arr, opts) {\r\n    if (!(this instanceof C2D2Context)) {\r\n        return new C2D2Context(arr, opts);\r\n    }\r\n\r\n    const el = this.canvas = c2d2Element(arr, opts);\r\n\r\n    this.context = this.parent = el.getContext('2d');\r\n    if (!C2D2Context.prototype.arc) {\r\n        _C2D2ContextSetup();\r\n    }\r\n    // Expose the c2d2Element properties (todo: could use Object.defineProperty to ensure stayed in sync)\r\n    this.width = el.width;\r\n    this.height = el.height;\r\n    return this; // Satisfy Netbeans\r\n};\r\n// Expose the c2d2Element methods\r\n_forEach(['transferControlToProxy', // Todo: Wrap this method's CanvasProxy return result?\r\n    'getContext', 'probablySupportsContext', 'supportsContext', 'setContext', 'toDataURL', 'toDataURLHD', 'toBlob', 'toBlobHD'], function (method) {\r\n    C2D2Context.prototype[method] = function () {\r\n        return this.canvas[method].apply(this.canvas, arguments);\r\n    };\r\n});\r\n\r\nC2D2Context.addMethods = function (methodMap) {\r\n    for (const m in methodMap) {\r\n        if (methodMap.hasOwnProperty(m)) {\r\n            const method = methodMap[m]; // Todo: Automate adding of '$' to the method?\r\n            C2D2Context.prototype[m] = buildContextMethods(method);\r\n        }\r\n    }\r\n};\r\n\r\n// Unlike addMethods, requires manually supplying 'this' at the end\r\nC2D2Context.extend = function (obj) { // Keeps constructor property in tact\r\n    for (const p in obj) {\r\n        if (obj.hasOwnProperty(p)) {\r\n            C2D2Context.prototype[p] = obj[p];\r\n        }\r\n    }\r\n};\r\n\r\n// EXTENSIONS\r\nC2D2Context.addMethods({\r\n    $line (obj, close) {\r\n        let a;\r\n        if (obj && typeof obj === 'object' && !obj.length) {\r\n            if (obj.color) {\r\n                this.$lineColor(obj.color);\r\n            }\r\n            if (obj.width || obj.w) {\r\n                this.lineWidth(obj.width || obj.w);\r\n            }\r\n            if (obj.shadow || obj.$shadow) {\r\n                this.$shadow(obj.shadow);\r\n            }\r\n            a = _arrayify.apply(null, (obj.coords || obj.xy || obj.path));\r\n        } else {\r\n            a = _arrayify.apply(null, arguments);\r\n        }\r\n        this.beginPath().moveTo.apply(this, a[0]);\r\n        for (let i = 1, argl = a.length; i < argl; i++) {\r\n            this.lineTo.apply(this, a[i]);\r\n        }\r\n        if (close || obj.close) {\r\n            this.closePath();\r\n        }\r\n        this.stroke();\r\n    },\r\n    $fill (obj) {\r\n        let a;\r\n        if (obj && typeof obj === 'object' && !obj.length) {\r\n            if (obj.color) {\r\n                this.$fillColor(obj.color);\r\n            }\r\n            if (obj.shadow || obj.$shadow) {\r\n                this.$shadow(obj.shadow);\r\n            }\r\n            a = _arrayify.apply(null, (obj.coords || obj.xy || obj.path));\r\n        } else {\r\n            a = _arrayify.apply(null, arguments);\r\n        }\r\n        if (a[0].length === 4) {\r\n            return this.$fillRect.apply(this, a);\r\n        }\r\n        this.beginPath().moveTo.apply(this, a[0]);\r\n        for (let i = 1, argl = a.length; i < argl; i++) {\r\n            this.lineTo.apply(this, a[i]);\r\n        }\r\n        this.fill();\r\n    },\r\n    $clear () {\r\n        this.$clearRect.apply(this, arguments);\r\n    },\r\n    $fillRect (x, y, w, h) {\r\n        if (x && typeof x === 'object' && x.length) {\r\n            for (let i = 0, argl = arguments.length; i < argl; i++) {\r\n                this.$fillRect.apply(this, arguments[i]); // Allow array for coordinates\r\n            }\r\n            return this;\r\n        }\r\n        this.fillRect(x || 0, y || 0, w || this.width, h || this.height);\r\n    },\r\n    $clearRect (x, y, w, h) {\r\n        if (x && typeof x === 'object' && x.length) {\r\n            for (let i = 0, argl = arguments.length; i < argl; i++) {\r\n                this.$clearRect.apply(this, arguments[i]); // Allow array for coordinates\r\n            }\r\n            return this;\r\n        }\r\n        this.clearRect(x || 0, y || 0, w || this.width, h || this.height);\r\n    },\r\n\r\n    // $rect, $clip, $arcTo\r\n\r\n    $strokeRect (x, y, w, h) {\r\n        if (x && typeof x === 'object' && x.length) {\r\n            for (let i = 0, argl = arguments.length; i < argl; i++) {\r\n                this.$strokeRect.apply(this, arguments[i]); // Allow array for coordinates\r\n            }\r\n            return this;\r\n        }\r\n        this.strokeRect(x || 0, y || 0, w || this.width, h || this.height);\r\n    },\r\n    $arc (x, y, radius, startAngle, endAngle, anticlockwise) {\r\n        if (x && typeof x === 'object' && x.length) {\r\n            for (let i = 0, argl = arguments.length; i < argl; i++) {\r\n                this.$arc.apply(this, arguments[i]); // Allow array for coordinates\r\n            }\r\n            return this;\r\n        }\r\n        this.arc(x, y, radius, startAngle, endAngle, anticlockwise);\r\n    },\r\n    $quadraticCurve () {\r\n        this.$quadratic.apply(this, arguments);\r\n    },\r\n    $quadraticCurveTo () {\r\n        this.$quadratic.apply(this, arguments);\r\n    },\r\n    $quadratic (cp1x, cp1y, x, y) {\r\n        if (cp1x && typeof cp1x === 'object' && cp1x.length) {\r\n            for (let i = 0, argl = arguments.length; i < argl; i++) {\r\n                this.$quadratic.apply(this, arguments[i]); // Allow array for coordinates\r\n            }\r\n            return this;\r\n        }\r\n        this.quadraticCurveTo(cp1x, cp1y, x, y);\r\n    },\r\n    $bezierCurve () {\r\n        this.$bezier.apply(this, arguments);\r\n    },\r\n    $bezierCurveTo () {\r\n        this.$bezier.apply(this, arguments);\r\n    },\r\n    $bezier (cp1x, cp1y, cp2x, cp2y, x, y) {\r\n        if (cp1x && typeof cp1x === 'object' && cp1x.length) {\r\n            for (let i = 0, argl = arguments.length; i < argl; i++) {\r\n                this.$bezier.apply(this, arguments[i]); // Allow array for coordinates\r\n            }\r\n            return this;\r\n        }\r\n        this.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\r\n    }\r\n});\r\nC2D2Context.extend({ // Don't auto-return 'this' object for these\r\n    $shadowColor (value) {\r\n        if (value === 'random') {\r\n            value = C2D2Context.randomColor();\r\n        }\r\n        return this.shadowColor(value);\r\n    },\r\n    $fillColor (value) { // getter or setter\r\n        if (value === 'random') {\r\n            value = C2D2Context.randomColor();\r\n        }\r\n        return this.fillStyle(value);\r\n    },\r\n    $lineColor (value) { // getter or setter\r\n        if (value === 'random') {\r\n            value = C2D2Context.randomColor();\r\n        }\r\n        return this.strokeStyle(value);\r\n    },\r\n    $imageData (...args) {\r\n        if (typeof args[0] === 'object' && args[1] !== undefined) {\r\n            this.putImageData(...args);\r\n            return this;\r\n        }\r\n        if (args[2] !== undefined) {\r\n            return this.getImageData(...args); // data (length), width, height\r\n        }\r\n        return this.createImageData(...args);\r\n    },\r\n    $shadowOffset (x, y) {\r\n        if (x === undefined) {\r\n            return [this.shadowOffsetX(), this.shadowOffsetY()];\r\n        }\r\n\r\n        if (typeof x === 'object' && !y && x.length) {\r\n            y = x[1];\r\n            x = x[0];\r\n        } else if (typeof x === 'string' && x.indexOf(', ') !== -1) {\r\n            ([x, y] = x.split(/\\s*,\\s*/));\r\n        }\r\n        this.shadowOffsetX(x).shadowOffsetY(y);\r\n        return this;\r\n    },\r\n    $shadowBlur (...args) { // Just a place-holder, at least for now\r\n        this.shadowBlur(...args);\r\n    },\r\n    $shadowOffsetY (...args) { // Just a place-holder, at least for now\r\n        this.shadowOffsetY(...args);\r\n    },\r\n    $shadowOffsetX (...args) { // Just a place-holder, at least for now\r\n        this.shadowOffsetX(...args);\r\n    },\r\n    $shadow (sh) {\r\n        let att;\r\n        if (sh === undefined) { // Not super useful compared to native\r\n            return {offset: this.$shadowOffset(), blur: this.shadowBlur(), color: this.$shadowColor(),\r\n                offsetX: this.shadowOffsetX(), offsetY: this.shadowOffsetY()};\r\n        }\r\n        for (att in sh) {\r\n            if (sh.hasOwnProperty(att)) {\r\n                if (att === 'offset') { // Offer additional property to get the coords together\r\n                    this.$shadowOffset(sh[att]);\r\n                } else {\r\n                    this['$shadow' + att.charAt(0).toUpperCase() + att.slice(1)](sh[att]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n});\r\n\r\nC2D2Context.randomNumber = function (min, max) {\r\n    min = min || 0;\r\n    max = max || 1;\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n};\r\n\r\n// See also the individual methods which use this (allowing \"random\" as a \"color\" argument)\r\nC2D2Context.randomColor = function (r, g, b, rmax, gmax, bmax) {\r\n    r = r || 0;\r\n    g = g || 0;\r\n    b = b || 0;\r\n    rmax = rmax || 255;\r\n    gmax = gmax || 255;\r\n    bmax = bmax || 255;\r\n    const red = C2D2Context.randomNumber(r, rmax),\r\n        green = C2D2Context.randomNumber(g, gmax),\r\n        blue = C2D2Context.randomNumber(b, bmax);\r\n    return 'rgb(' + red + ', ' + green + ', ' + blue + ')';\r\n};\r\n/**\r\nUseful for separation of concerns, detecting the CSS style rule for a given class, id, or other selector and applying it as an argument to a canvas method, so that the JavaScript does not need to be concerned with secondary styling (of course the images it generates is a kind of style)\r\n*/\r\nC2D2Context.getCSSPropertyValue = function (selectorText, propertyName, sheet) {\r\n    let ss, val,\r\n        i = 0, j = 0, dsl = 0, crl = 0;\r\n    function _getPropertyFromStyleSheet (ss, selectorText, propertyName) {\r\n        const rules = ss.cssRules || ss.rules; // Mozilla or IE\r\n        for (j = 0, crl = rules.length; j < crl; j++) {\r\n            const rule = rules[j];\r\n            try {\r\n                if (rule.type === 1 && // CSSRule.STYLE_RULE\r\n                    rule.selectorText === selectorText) {\r\n                    return rule.style.getPropertyValue(propertyName);\r\n                }\r\n            } catch (err) { // IE\r\n                if (rule.selectorText === selectorText) {\r\n                    propertyName = propertyName.replace(/-([a-z])/g, String.prototype.toUpperCase);\r\n                    return rule.style[propertyName];\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    if (sheet !== undefined) {\r\n        ss = document.styleSheets[sheet];\r\n        return _getPropertyFromStyleSheet(ss, selectorText, propertyName);\r\n    }\r\n    for (i = 0, dsl = document.styleSheets.length; i < dsl; i++) {\r\n        ss = document.styleSheets[i];\r\n        val = _getPropertyFromStyleSheet(ss, selectorText, propertyName);\r\n        if (val) {\r\n            break;\r\n        }\r\n    }\r\n    return val;\r\n};\r\n\r\n// Attach classes for sake of extensibility (or utilization for canvasElement)\r\nC2D2Context.CanvasPixelArray = C2D2CanvasPixelArray;\r\nC2D2Context.ImageData = C2D2ImageData;\r\nC2D2Context.Gradient = C2D2Gradient;\r\nC2D2Context.Pattern = C2D2Pattern;\r\nC2D2Context.canvasElement = c2d2Element;\r\n\r\nexport default C2D2Context;\r\n"],"names":["_forEach","arr","h","i","arrl","length","_arrayify","begin","coords","args","arguments","trim","replace","split","item","idx","w","window","global","buildMethod","m","parent","apply","this","buildGetterMethod","gm","methodFromProperty","WrapperClass","imageData","slice","call","buildLiteralGetterMethod","buildPropertyMethod","p","value","undefined","buildContextMethods","method","DelegateChain","methods","clss","methl","prototype","getterMethods","gmethl","props","propl","C2D2CanvasPixelArray","canvasPixelArrayObj","value2","addPropertyMethods","array","pixelArray","C2D2ImageData","imageDataObj","width","addGetterMethods","C2D2Gradient","gradientObj","addColorStop","addMethods","gradient","C2D2Pattern","patternObj","pattern","c2d2Element","opts","Canvas","fs","out","stream","path","height","el","d","document","noArray","bNodeModule","fileStream","getElementById","require","createWriteStream","createPNGStream","on","chunk","write","end","nodeName","getElementsByTagName","createElementNS","documentElement","namespaceURI","createElement","setAttribute","id","style","innerHTML","className","appendTo","body","appendChild","G_vmlCanvasManager","initElement","C2D2Context","canvas","context","getContext","arc","methodMap","hasOwnProperty","extend","obj","close","a","color","$lineColor","lineWidth","shadow","$shadow","xy","beginPath","moveTo","argl","lineTo","closePath","stroke","$fillColor","$fillRect","fill","$clearRect","x","y","fillRect","clearRect","$strokeRect","strokeRect","radius","startAngle","endAngle","anticlockwise","$arc","$quadratic","cp1x","cp1y","quadraticCurveTo","$bezier","cp2x","cp2y","bezierCurveTo","randomColor","shadowColor","fillStyle","strokeStyle","putImageData","getImageData","createImageData","shadowOffsetX","shadowOffsetY","indexOf","shadowBlur","sh","att","offset","$shadowOffset","blur","$shadowColor","offsetY","charAt","toUpperCase","randomNumber","min","max","Math","floor","random","r","g","b","rmax","gmax","bmax","getCSSPropertyValue","selectorText","propertyName","sheet","ss","val","j","dsl","crl","_getPropertyFromStyleSheet","rules","cssRules","rule","type","getPropertyValue","err","String","styleSheets","CanvasPixelArray","ImageData","Gradient","Pattern","canvasElement"],"mappings":"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"}